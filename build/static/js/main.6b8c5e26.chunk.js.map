{"version":3,"sources":["components/Start.js","components/Question.js","components/End.js","components/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Start","setName","onQuizStart","className","onClick","Question","data","onAnswerUpdate","numberOfQuestions","activeQuestion","onSetActiveQuestion","onSetStep","useState","selected","setSelected","error","setError","radiosWrapper","useRef","useEffect","findCheckedInput","current","querySelector","checked","changeHandler","e","target","value","question","ref","choices","map","choice","i","type","name","onChange","prevState","q","a","End","results","onReset","onAnswersCheck","time","correctAnswers","setCorrectAnswers","correct","forEach","result","index","answer","length","Math","floor","axios","post","then","response","console","log","window","location","Button","variant","color","size","style","alignSelf","marginTop","href","Modal","onClose","App","step","setStep","setActiveQuestion","answers","setAnswers","showModal","setShowModal","clearInterval","interval","quizData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b8c5e26.chunk.js","sourcesContent":["import React from 'react';\n/* import { TextField } from \"@material-ui/core\"; */\n\nconst Start = ({ setName, onQuizStart }) => {\n  return(\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"content\">\n      \n      {/*   <TextField\n            style={{ marginBottom: 25 }}\n            label=\"Enter Your Name\"\n            variant=\"outlined\"\n            autoComplete=\"off\"\n            onChange={(e) => setName(e.target.value)}\n          />\n           <TextField\n            style={{ marginBottom: 25 }}\n            label=\"Enter Your Email ID\"\n            variant=\"outlined\"\n            autoComplete=\"off\"\n            onChange={(e) => setName(e.target.value)}\n          /> */}\n       \n          <h1>Start the quiz</h1>\n          <p>Good luck!</p>\n          <button className=\"button is-info is-medium\" onClick={onQuizStart}>Start</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Start;","import React, { useState, useEffect, useRef } from 'react';\n\nconst Question = ({ data, onAnswerUpdate, numberOfQuestions, activeQuestion, onSetActiveQuestion, onSetStep }) => {\n  const [selected, setSelected] = useState('');\n  const [error, setError] = useState('');\n  const radiosWrapper = useRef();\n\n  useEffect(() => {\n    const findCheckedInput = radiosWrapper.current.querySelector('input:checked');\n    if(findCheckedInput) {\n      findCheckedInput.checked = false;\n    }\n  }, [data]);\n\n  const changeHandler = (e) => {\n    setSelected(e.target.value);\n    if(error) {\n      setError('');\n    }\n  }\n  \n  const nextClickHandler = (e) => {\n    if(selected === '') {\n      return setError('Please select one option!');\n    }\n    onAnswerUpdate(prevState => [...prevState, { q: data.question, a: selected }]);\n    setSelected('');\n    if(activeQuestion < numberOfQuestions - 1) {\n      onSetActiveQuestion(activeQuestion + 1);\n    }else {\n      onSetStep(3);\n    }\n  }\n\n  return(\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"content\">\n          <h2 className=\"mb-5\">{data.question}</h2>\n          <div className=\"control\" ref={radiosWrapper}>\n            {data.choices.map((choice, i) => (\n              <label className=\"radio has-background-light\" key={i}>\n                <input type=\"radio\" name=\"answer\" value={choice} onChange={changeHandler} />\n                {choice}\n              </label>\n            ))}\n          </div>\n          {error && <div className=\"has-text-danger\">{error}</div>}\n          <button className=\"button is-link is-medium is-fullwidth mt-4\" onClick={nextClickHandler}>Next</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Question;","import React, { useEffect, useState } from 'react';\nimport { Button } from \"@material-ui/core\";\nimport axios from 'axios';\n\n/* import { formatTime } from '../utils'; */\n\nconst End = ({ results, data, onReset, onAnswersCheck, time }) => {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n\n  useEffect(() => {\n    let correct = 0;\n    results.forEach((result, index) => {\n      if(result.a === data[index].answer) {\n        correct++;\n      }\n    });\n    setCorrectAnswers(correct);\n    // eslint-disable-next-line\n  }, []);\n  function onSubmit() {\n    \n    axios.post('../../score',results)\n        .then((response) => {\n            console.log(response)\n            window.location='/'\n        });\n}\n\n  return(\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"content\">\n          <h3>Your results</h3>\n          <p>{correctAnswers} of {data.length}</p>\n          <p><strong>{Math.floor((correctAnswers / data.length) * 100)}%</strong></p>\n          {/* <p><strong>Your time:</strong> {formatTime(time)}</p> */}\n          <button className=\"button is-info mr-2\" onClick={onAnswersCheck}>Check your answers</button>\n          <button className=\"button is-success\" onClick={onReset}>Try again</button>\n          <button className=\"button is-success\" onClick={onSubmit}>Submit</button>\n          <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        size=\"large\"\n        style={{ alignSelf: \"center\", marginTop: 20 }}\n        href=\"/\"\n      >\n        Go to homepage\n      </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default End;","import React from 'react';\n\nconst Modal = ({ onClose, results, data }) => {\n  return(\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" onClick={onClose}></div>\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">Your answers</p>\n          <button className=\"delete\" onClick={onClose}></button>\n        </header>\n        <section className=\"modal-card-body content\">\n          <ul>\n            {results.map((result, i) => (\n              <li key={i} className=\"mb-6\">\n                <p><strong>{result.q}</strong></p>\n                <p className={result.a === data[i].answer ? 'has-background-success has-text-white p-2' : 'has-background-danger has-text-white p-2'}>Your answer: {result.a}</p>\n                {result.a !== data[i].answer && <p className=\"has-background-link has-text-white p-2\">Correct answer: {data[i].answer}</p>}\n              </li>\n            ))}\n          </ul>\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport Start from './components/Start';\nimport Question from './components/Question';\nimport End from './components/End';\nimport Modal from './components/Modal';\nimport quizData from './data/quiz.json';\n\nlet interval;\n\nconst App = () => {\n  const [step, setStep] = useState(1);\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  // const [time, setTime] = useState(0);\n\n  useEffect(() => {\n    if (step === 3) {\n      clearInterval(interval);\n    }\n  }, [step]);\n\n  const quizStartHandler = () => {\n    setStep(2);\n    // interval = setInterval(() => {\n    //   setTime(prevTime => prevTime + 1);\n    // }, 1000);\n  }\n\n  const resetClickHandler = () => {\n    setActiveQuestion(0);\n    setAnswers([]);\n    setStep(2);\n    //setTime(0);\n    // interval = setInterval(() => {\n    //   setTime(prevTime => prevTime + 1);\n    // }, 1000);\n  }\n\n  return (\n    <div className=\"App\">\n      {step === 1 && <Start onQuizStart={quizStartHandler} />}\n      {step === 2 && <Question\n        data={quizData.data[activeQuestion]}\n        onAnswerUpdate={setAnswers}\n        numberOfQuestions={quizData.data.length}\n        activeQuestion={activeQuestion}\n        onSetActiveQuestion={setActiveQuestion}\n        onSetStep={setStep}\n      />}\n      {step === 3 && <End\n        results={answers}\n        data={quizData.data}\n        onReset={resetClickHandler}\n        onAnswersCheck={() => setShowModal(true)}\n      // time={time}\n      />}\n\n      {showModal && <Modal\n        onClose={() => setShowModal(false)}\n        results={answers}\n        data={quizData.data}\n      />}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}